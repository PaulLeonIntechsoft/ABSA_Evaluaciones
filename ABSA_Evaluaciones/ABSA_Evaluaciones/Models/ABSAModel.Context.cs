//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ABSA_Evaluaciones.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ABSA_EvaluacionEntities : DbContext
    {
        public ABSA_EvaluacionEntities()
            : base("name=ABSA_EvaluacionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_insertarEvaluacion(Nullable<int> codigoPersonal, string codRespuestaUno, string codRespuestaDos, string codRespuestaTres, string codRespuestaCuatro, string codRespuestaCinco, string codRespuestaSeis, Nullable<short> codRespuestaSiete, string usrEvaluador, string valorResultado, Nullable<decimal> notaResultado, string codigoProyecto, string codigoAdicional, string puestoPersonal)
        {
            var codigoPersonalParameter = codigoPersonal.HasValue ?
                new ObjectParameter("codigoPersonal", codigoPersonal) :
                new ObjectParameter("codigoPersonal", typeof(int));
    
            var codRespuestaUnoParameter = codRespuestaUno != null ?
                new ObjectParameter("codRespuestaUno", codRespuestaUno) :
                new ObjectParameter("codRespuestaUno", typeof(string));
    
            var codRespuestaDosParameter = codRespuestaDos != null ?
                new ObjectParameter("codRespuestaDos", codRespuestaDos) :
                new ObjectParameter("codRespuestaDos", typeof(string));
    
            var codRespuestaTresParameter = codRespuestaTres != null ?
                new ObjectParameter("codRespuestaTres", codRespuestaTres) :
                new ObjectParameter("codRespuestaTres", typeof(string));
    
            var codRespuestaCuatroParameter = codRespuestaCuatro != null ?
                new ObjectParameter("codRespuestaCuatro", codRespuestaCuatro) :
                new ObjectParameter("codRespuestaCuatro", typeof(string));
    
            var codRespuestaCincoParameter = codRespuestaCinco != null ?
                new ObjectParameter("codRespuestaCinco", codRespuestaCinco) :
                new ObjectParameter("codRespuestaCinco", typeof(string));
    
            var codRespuestaSeisParameter = codRespuestaSeis != null ?
                new ObjectParameter("codRespuestaSeis", codRespuestaSeis) :
                new ObjectParameter("codRespuestaSeis", typeof(string));
    
            var codRespuestaSieteParameter = codRespuestaSiete.HasValue ?
                new ObjectParameter("codRespuestaSiete", codRespuestaSiete) :
                new ObjectParameter("codRespuestaSiete", typeof(short));
    
            var usrEvaluadorParameter = usrEvaluador != null ?
                new ObjectParameter("usrEvaluador", usrEvaluador) :
                new ObjectParameter("usrEvaluador", typeof(string));
    
            var valorResultadoParameter = valorResultado != null ?
                new ObjectParameter("valorResultado", valorResultado) :
                new ObjectParameter("valorResultado", typeof(string));
    
            var notaResultadoParameter = notaResultado.HasValue ?
                new ObjectParameter("notaResultado", notaResultado) :
                new ObjectParameter("notaResultado", typeof(decimal));
    
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("codigoProyecto", codigoProyecto) :
                new ObjectParameter("codigoProyecto", typeof(string));
    
            var codigoAdicionalParameter = codigoAdicional != null ?
                new ObjectParameter("codigoAdicional", codigoAdicional) :
                new ObjectParameter("codigoAdicional", typeof(string));
    
            var puestoPersonalParameter = puestoPersonal != null ?
                new ObjectParameter("puestoPersonal", puestoPersonal) :
                new ObjectParameter("puestoPersonal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertarEvaluacion", codigoPersonalParameter, codRespuestaUnoParameter, codRespuestaDosParameter, codRespuestaTresParameter, codRespuestaCuatroParameter, codRespuestaCincoParameter, codRespuestaSeisParameter, codRespuestaSieteParameter, usrEvaluadorParameter, valorResultadoParameter, notaResultadoParameter, codigoProyectoParameter, codigoAdicionalParameter, puestoPersonalParameter);
        }
    
        public virtual ObjectResult<sp_listarProyectos_Result> sp_listarProyectos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarProyectos_Result>("sp_listarProyectos");
        }
    
        public virtual ObjectResult<sp_listarResultados_Result> sp_listarResultados(Nullable<int> codigoPersonal)
        {
            var codigoPersonalParameter = codigoPersonal.HasValue ?
                new ObjectParameter("codigoPersonal", codigoPersonal) :
                new ObjectParameter("codigoPersonal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarResultados_Result>("sp_listarResultados", codigoPersonalParameter);
        }
    
        public virtual ObjectResult<sp_listarResultadosVigentes_Result> sp_listarResultadosVigentes(Nullable<int> codigoPersonal)
        {
            var codigoPersonalParameter = codigoPersonal.HasValue ?
                new ObjectParameter("codigoPersonal", codigoPersonal) :
                new ObjectParameter("codigoPersonal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarResultadosVigentes_Result>("sp_listarResultadosVigentes", codigoPersonalParameter);
        }
    
        public virtual ObjectResult<sp_logeo_Result> sp_logeo(string usuario, string contrasena)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_logeo_Result>("sp_logeo", usuarioParameter, contrasenaParameter);
        }
    
        public virtual ObjectResult<sp_nota_Result> sp_nota(Nullable<short> numeroPregunta, string codigoRespuesta)
        {
            var numeroPreguntaParameter = numeroPregunta.HasValue ?
                new ObjectParameter("numeroPregunta", numeroPregunta) :
                new ObjectParameter("numeroPregunta", typeof(short));
    
            var codigoRespuestaParameter = codigoRespuesta != null ?
                new ObjectParameter("codigoRespuesta", codigoRespuesta) :
                new ObjectParameter("codigoRespuesta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_nota_Result>("sp_nota", numeroPreguntaParameter, codigoRespuestaParameter);
        }
    
        public virtual ObjectResult<sp_personalSeleccionado_Result> sp_personalSeleccionado(string codigoProyecto, string codigoAdicional, Nullable<int> idPersonal)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("codigoProyecto", codigoProyecto) :
                new ObjectParameter("codigoProyecto", typeof(string));
    
            var codigoAdicionalParameter = codigoAdicional != null ?
                new ObjectParameter("codigoAdicional", codigoAdicional) :
                new ObjectParameter("codigoAdicional", typeof(string));
    
            var idPersonalParameter = idPersonal.HasValue ?
                new ObjectParameter("idPersonal", idPersonal) :
                new ObjectParameter("idPersonal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_personalSeleccionado_Result>("sp_personalSeleccionado", codigoProyectoParameter, codigoAdicionalParameter, idPersonalParameter);
        }
    
        public virtual ObjectResult<sp_personalXProyecto_Result> sp_personalXProyecto(string codigoProyecto, string codigoAdicional)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("codigoProyecto", codigoProyecto) :
                new ObjectParameter("codigoProyecto", typeof(string));
    
            var codigoAdicionalParameter = codigoAdicional != null ?
                new ObjectParameter("codigoAdicional", codigoAdicional) :
                new ObjectParameter("codigoAdicional", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_personalXProyecto_Result>("sp_personalXProyecto", codigoProyectoParameter, codigoAdicionalParameter);
        }
    
        public virtual ObjectResult<sp_preguntas_Result> sp_preguntas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_preguntas_Result>("sp_preguntas");
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_respuestas_Result> sp_respuestas(Nullable<short> numeroPregunta)
        {
            var numeroPreguntaParameter = numeroPregunta.HasValue ?
                new ObjectParameter("numeroPregunta", numeroPregunta) :
                new ObjectParameter("numeroPregunta", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_respuestas_Result>("sp_respuestas", numeroPreguntaParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
